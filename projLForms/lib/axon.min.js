var Axon=function(){"use strict";const n=(n,t)=>typeof n===t,t=Array.isArray,e=t=>n(t,"undefined"),i=n=>e(n)||null===n,r=(n,t)=>{Object.entries(n).forEach((e,i)=>{t(e[0],e[1],i,n)})},o=t=>!i(t)&&(n(t,"object")||n(t,"function")),u=n=>Object.assign({},n),c=n=>new Map(Object.entries(n)),f=(c({"===":(n,t)=>n===t,"!==":(n,t)=>n!==t,"&&":(n,t)=>n&&t,"||":(n,t)=>n||t,">=":(n,t)=>n>=t,"<=":(n,t)=>n<=t,">":(n,t)=>n>t,"<":(n,t)=>n<t}),n=>n.substr(1,n.length-2)),s=c({false:!1,true:!0,null:null}),a=/^["'`].*["'`]$/,l=(n,t,r=!1)=>{const o=t.split(/(?:\.|\[|\])+/g).map(n=>a.test(n)?f(n):n);let u=n;let c=null;let s=null;let l=0;for(;!i(u)&&l<o.length;){if(s=o[l],e(u[s]))return null;c=u,u=u[s],l++}return r?{index:l,key:s,val:u,container:c}:u},h=(c({"+":(n,t)=>n+t,"-":(n,t)=>n-t,"*":(n,t)=>n*t,"/":(n,t)=>n/t,"%":(n,t)=>n%t,"**":(n,t)=>n**t}),/^.+\(.*\)$/),d=(n,t)=>{if(t)return!1;throw new Error(`missing prop/method '${n}'`)},p=(n,t=[])=>n.val.apply(n.node.data,[...n.args,...t]),m=(n,t)=>{let e=null;e=isNaN(Number(n))?a.test(n)?f(n):s.has(n)?s.get(n):b(n,t).val:Number(n);return e},v=(n,t,e=!1)=>{if(h.test(n)){const i=$(n,t,e),r=p(i);return{node:i.node,val:r}}return b(n,t,e)},b=(n,t,e=!1)=>{let i=t;for(;i;){const t=l(i.data,n,!0);if(null!==t)return t.node=i,t;i=i.$parent}return d(n,e)},$=(n,t,i=!1)=>{const r=n.match(/(.+)\s?\((.*)\)/);const o=e(r[2])?[]:r[2].split(",");const u=l(t.$app.methods,r[1],!0);if(null!==u)return u.args=o.map(n=>m(n,t)),u.node=t.$app.$entry,u;return d(n,i)},y=(n,t,e)=>n.setAttribute("x-"+t,e),g=(n,t)=>n.hasAttribute("x-"+t),x=(n,t)=>n.removeAttribute("x-"+t),A=n=>n.name.startsWith("x-"),E=n=>Array.from(n.attributes).filter(A),w=n=>E(n).length>0,j=n=>E(n).map(n=>{const t=n.name.replace("x-","").split(":");return{name:t[0],opt:t[1]||"",content:n.value}}),N=(n,t,e)=>n.addEventListener(t,e),k=n=>"checkbox"===n.type||"radio"===n.type,C=n=>k(n)?"change":"input",L=n=>{if(!e(n.value))return k(n)?"checked":"value";if(!e(n.textContent))return"textContent";return"innerHTML"},M=(n,t)=>t?n.removeAttribute("hidden"):n.setAttribute("hidden","hidden"),O=n=>({set:(t,e,i)=>{i!==t[e]&&(t[e]=i,n.run(1));return!0}}),H=(n,t)=>{const e=n;r(e,(n,i)=>{o(i)&&(e[n]=H(i,t))});return new Proxy(n,t)},S=(n,t)=>H(n,O(t)),T=n=>{const e=[];n.forEach(n=>{t(n)?e.push(...T(n)):e.push(n)});return e},B=(n,t,e)=>T(Array.from(t).map(t=>{if(w(t))return new P(n,t,e);if(t.children.length>0)return B(n,t.children,e);return null}).filter(n=>n)),P=class{constructor(n,t,e,i={}){const r=i;this.directives=j(t),this.data=S(r,this),this.$app=n,this.$element=t,this.$parent=e,this.$children=B(n,t.children,this)}run(n){return!!this.directives.map(t=>{if(this.$app.directives.has(t.name)){const e=this.$app.directives.get(t.name),i=e[n];if(i)return i(t,this.$element,this)}return!0}).every(n=>n)&&(this.$children.forEach(t=>t.run(n)),!0)}},W=c({if:{[1]:(n,t,e)=>{const i=Boolean(v(n.content,e,!0).val);M(t,i);return i}},on:{[0]:(n,t,e)=>{N(t,n.opt,t=>p($(n.content,e),[t]));return!0}},model:{[0]:(n,t,e)=>{const i=L(t);const r=C(t);N(t,r,()=>{const r=b(n.content,e);r.container[r.key]=t[i]});return!0},[1]:(n,t,e)=>{const i=L(t);const r=b(n.content,e);t[i]=r.val;return!0}},bind:{[1]:(n,t,e)=>{t.setAttribute(n.opt,v(n.content,e).val);return!0}},text:{[1]:(n,t,e)=>{t.textContent=String(v(n.content,e).val);return!0}},html:{[1]:(n,t,e)=>{t.innerHTML=String(v(n.content,e).val);return!0}},for:{[0]:(n,t)=>{y(t,"forbase","forbase");M(t,!1);return!1},[1]:(n,t,e)=>{const i=n.content.match(/(.+) of (.+)/);const r=i[1];const o=b(i[2],e).val;e.$children=[];Array.from(t.parentElement.children).forEach(n=>{g(n,"dyn")&&n.remove()});for(const n of o){const i=t.cloneNode(!0),o=u(e.data);y(i,"dyn","dyn"),x(i,"forbase"),x(i,"for"),M(i,!0),o[r]=n;const c=t.insertAdjacentElement("beforebegin",i),f=new P(e.$app,c,e.$parent,o);e.$children.push(f),f.run(0)}return!0}}});return class{constructor(n){this.$entry=new P(this,n.el,null,n.data),this.methods=n.methods||{},this.directives=W,this.init(),this.render()}init(){return this.$entry.run(0)}render(){return this.$entry.run(1)}}}();
//# sourceMappingURL=axon.min.js.map
